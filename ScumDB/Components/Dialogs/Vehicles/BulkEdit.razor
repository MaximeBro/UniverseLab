<MudDialog Class="darkless-bg">
    <DialogContent>
        <MudIconButton Class="ml-n4 icon-hoverable-light" Icon="@IconsM.Filled.Close" OnClick="@(() => Dialog.Close())" />
        <MudStack Class="px-4 py-2" Justify="Justify.SpaceEvenly" Row="false" Spacing="0">
            <MudTextField T="string" @bind-Value="_insert" Lines="5" Label="Édition de masse" Immediate Clearable Variant="Variant.Outlined" Style="width: 720px;" />
        </MudStack>
    </DialogContent>
    <DialogActions>
        @if (_loading)
        {
            <MudButton Class="d-flex" Style="flex-direction: row; align-items: center; justify-content: center;" Color="Color.Success" Variant="Variant.Filled" Disabled>
                <MudProgressCircular Indeterminate Size="Size.Small" Class="text-white"/>
                <MudText Class="ml-1 text-white">Chargement...</MudText>
            </MudButton>
        }
        else
        {
            <MudButton Color="Color.Success" Variant="Variant.Filled" OnClick="@SubmitAsync">Enregistrer</MudButton>
        }
        
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] public MudDialogInstance Dialog { get; set; } = null!;

    [Inject] public IVehicleService VehicleService { get; set; } = null!;
    [Inject] public ISnackbar Snackbar { get; set; } = null!;

    private string _insert = string.Empty;
    private bool _loading;
    
    private async Task SubmitAsync()
    {
        _loading = true;
        var vehicles = await VehicleService.ParseAsync(_insert);
        var existing = await VehicleService.GetVehiclesByIds(vehicles.Select(x => x.VehicleId).ToList());
        var updated = await VehicleService.UpdateVehiclesLocationAsync(existing);
        
        Snackbar.Add($"{updated} véhicules modifiés avec succès !", Severity.Success, Hardcoded.SnackbarOptions);
        _loading = false;

        Dialog.Close(true);
    }
}