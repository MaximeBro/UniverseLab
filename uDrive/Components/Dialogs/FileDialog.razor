<EditForm Model="@_model" OnValidSubmit="@Submit">
    <MudDialog Class="background-800">
        <DialogContent>
            <MudStack Row="false" Spacing="0">
                <DialogCloseButton Justify="Justify.FlexEnd" Dialog="@Dialog" ButtonClass="mr-n4 align-self-end"/>
                <MudText Align="Align.Center">Création d'un fichier</MudText>
            </MudStack>
            
            <MudStack Class="px-12 py-4" Justify="Justify.SpaceEvenly" Row="false" Spacing="0">
                <MudTextField T="string" @bind-Value="_model.Name" Variant="Variant.Text" Label="Nom du fichier" Immediate/>
                @if (DisplayError)
                {
                    <MudAlert Severity="Severity.Error" Dense>
                        Ce fichier existe déjà.
                    </MudAlert>
                }
            </MudStack>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="@Close" Color="Color.Default">Annuler</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Color="Color.Success" Disabled="@DisplayError">Ok</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter] public MudDialogInstance Dialog { get; set; } = null!;
    
    [Parameter] public string UserIdentifier { get; set; } = null!;
    [Parameter] public Guid? ParentId { get; set; }
    [Inject] public IDbContextFactory<MainDbContext> Factory { get; set; } = null!;

    private readonly FileModel _model = new();
    private string[] _forbiddenNames = [];

    private bool DisplayError => _forbiddenNames.Contains(_model.Name, StringComparer.OrdinalIgnoreCase);
    
    protected override async Task OnInitializedAsync()
    {
        await using var db = await Factory.CreateDbContextAsync();
        _forbiddenNames = db.UserFiles.Where(x => x.UserIdentifier == UserIdentifier && x.ParentId == ParentId).Select(x => x.FileName).ToArray();
    }

    private void Close() => Dialog.Close();
    private void Submit() => Dialog.Close(_model.Name);
}